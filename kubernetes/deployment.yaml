apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-memory-leak-app
  namespace: dotnet-memory-leak-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-memory-leak-app
  template:
    metadata:
      labels:
        app: dotnet-memory-leak-app
    spec:
      shareProcessNamespace: false
      serviceAccountName: dotnet-app-sa
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: dump-storage
          persistentVolumeClaim:
            claimName: dotnet-memory-leak-dumps
        - name: tmp-volume
          emptyDir:
            sizeLimit: 1Gi
      containers:
        - name: dotnet-app
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          image: quay.io/rhn_support_arolivei/dotnet-memory-leak-app:v1
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - mkdir -p /app/dumps/tmp && chmod 777 /app/dumps/tmp && exec dotnet /app/DotNetMemoryLeakApp.dll
          ports:
            - containerPort: 8881
            name: http
          env:
            - name: ASPNETCORE_URLS
              value: "http://+:8881"
            - name: COMPlus_DbgEnableElfDumpOnCrash
              value: "1"
            - name: COMPlus_DbgCrashDumpType
              value: "3"
            - name: COMPlus_DbgMiniDumpName
              value: "/app/dumps/dump.%e.%p.%t.dmp"
            - name: TMPDIR
              value: "/tmp"
          volumeMounts:
            - mountPath: /app/dumps
              name: dump-storage
            - name: tmp-volume
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8881
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8881
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: 8881
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "2Gi"